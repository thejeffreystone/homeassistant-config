###############################################################################
#   @author         :   Jeffrey Stone
#   @date           :   07/31/2023
#   @package        :   Utilities
#   @description    :   Just some Useful Helper Scripts for Home Assistant
###############################################################################


automation:
  - id: startup_tasks
    alias: startip_tasks
    initial_state: true
    trigger:
    - platform: time
      at: '00:00:01'
    - platform: homeassistant
      event: start
    action:
    - delay: '00:02:00'
    - service: python_script.special_events
      data:
        name: Skylar
        type: birthday
        date: !secret skylar_bday
    - service: python_script.special_events
      data:
        name: Jeff
        type: birthday
        date: !secret jeff_bday
    - service: python_script.special_events
      data:
        name: Kat
        type: birthday
        date: !secret kat_bday
    - service: python_script.special_events
      data:
        name: Our wedding
        type: anniversary
        date: !secret wed_anniversary
    - service: python_script.special_events
      data:
        name: Maison Des Lunes
        type: established
        date: !secret maisondelune_est
    - service: python_script.special_events
      data:
        name: Texas
        type: trip
        date: !secret texas_trip
    - service: python_script.special_events
      data:
        name: Disney
        type: vacation
        date: !secret cruise_date
    - service: script.update_critical_battery_group
    - delay: '00:01:00'
    - service: script.update_occupancy_groups


script:
  update_critical_battery_group:
    sequence:
      # Reset group 
      - service: group.set
        data:
          object_id: "critical_batteries"
          entities: []
      # Add Battery in the Critical Battery Group
      - service: group.set
        data:
          object_id: "critical_batteries"
          add_entities: >-
            {{ states.sensor | 
              selectattr('entity_id', 'in', area_entities('Critical Batteries')) |
              map(attribute='entity_id') | list  | join(',') }} 
             
  cleanup_text:
    sequence:
    - variables:
        cleaned: >
          {%- macro getReport() -%}
              {{ message }}
          {%- endmacro -%} {%- macro cleanup(data) -%}
            {%- for item in data.split("\n")  if item | trim != "" -%}
              {{ item | trim }} {% endfor -%}
          {%- endmacro -%} {%- macro mother_of_all_macros() -%}
            {{ getReport() }}
          {%- endmacro -%} 
          {"text":"{{- cleanup(mother_of_all_macros()) | string -}}"}
    - stop: "ok, Im done."
      response_variable: "cleaned"

  get_room_services:
    fields:
      room:
        selector:
          select:
            options:
              - jeff
              - kat
              - skylar
              - living room
              - theater
              - studio
              - master bedroom
              - skylars bedroom
        name: room
        description: Where to send notification
        required: False
        default: living room
    sequence:
    - variables:
        room_priority: >
          {% if room in ['jeff','kat','skylar']%}
            {{ states('sensor.'~room~'_room') }}
          {% else %}
            {{ room }}          
          {% endif %}
        room_services: >-
          {% set jarvis_speaker = states.media_player | 
              selectattr('entity_id', 'in', area_entities(room_priority)) |
              rejectattr('attributes.last_called', 'undefined') |
              map(attribute='entity_id') |
            list | first %}

          {% set audio_speaker = states.media_player | 
              selectattr('entity_id', 'in', area_entities(room_priority)) |
              rejectattr('attributes.device_class', 'undefined') |
              selectattr('attributes.device_class', 'search', '(speaker)') | 
              map(attribute='entity_id') |
            list | first %}


          {% set tts = 'amp' %}
          {"area":"{{room}}","jarvis_speaker":"{{jarvis_speaker}}","jarvis_tts":"{{tts}}","audio_speaker":"{{audio_speaker}}"}
    - stop: "ok, Im done."
      response_variable: "room_services"          

  get_audio_services:
    fields:
      room:
        selector:
          select:
            options:
              - jeff
              - kat
              - skylar
              - living room
              - theater
              - studio
              - master bedroom
              - skylars bedroom
        name: room
        description: Room where to Send Audio
        required: true
        default: living room
      type:
        selector:
          select:
            options:
              - normal
              - notification
              - briefing
              - weather_alert
              - weather_advisory
              - alert
              - goodnight
        name: type
        description: Type of notification
        required: true
        default: normal
    sequence:
    - service: script.get_room_presence
      response_variable: "presence"
    - variables:
        room_priority: >
          {% if room is defined %}
            {% if room in ['jeff','kat','skylar']%}
              {{ states('sensor.'~room~'_room') }}
            {% else %}
              {{ room }}          
            {% endif %}
          {% else %}
            NA         
          {% endif %}
        rooms: >
          {{ presence.occupied_rooms |
            replace('master_bedroom','Master Bedroom') |
            replace('living_room','Living Room') |
            replace('pot_studio','Pottery Studio') |
            replace('skylars_bedroom','Skylars Bedroom') |
            replace('kitchen','Living Room')  }}
        room_services: >
          {% if type == 'alert'%}
            {% set jarvis_speaker = states.media_player | 
              rejectattr('attributes.last_called', 'undefined') |
              rejectattr('entity_id', 'search', '(skyman|this_device|everywhere|skylars)') |
              map(attribute='entity_id') |
              list | join(',') %}
            {% set audio_speaker = 'none' %}
            {% set tts = 'amp' %}
            {% set room = 'all' %}
          {% elif is_state('input_boolean.audible_notifications', 'off')%}
            {% set room = 'text' %}
            {% set jarvis_speaker = 'none' %}
            {% set audio_speaker = 'none' %}
            {% set tts = 'text' %}
          {% elif is_state('input_boolean.vacation_mode', 'on')%}
            {% set room = 'text' %}
            {% set jarvis_speaker = 'none' %}
            {% set audio_speaker = 'none' %}
            {% set tts = 'text' %}
          {% elif type == 'normal'%}
            {% set jarvis_speaker = states.media_player | 
              rejectattr('attributes.last_called', 'undefined') |
              rejectattr('entity_id', 'search', '(skyman|this_device|everywhere|bedroom|skylars)') |
              map(attribute='entity_id') |
              list | join(',') %}
            {% set audio_speaker = 'none' %}
            {% set tts = 'amp' %}
            {% set room = 'all' %}
          {% elif room in ['jeff','kat','skylar'] %} 
            {% set room = room_priority |
            replace('master_bedroom','Master Bedroom') |
            replace('living_room','Living Room') |
            replace('pot_studio','Pottery Studio') |
            replace('skylars_bedroom','Skylars Bedroom') |
            replace('kitchen','Living Room') %}

            {% set jarvis_speaker = states.media_player | 
                rejectattr('attributes.last_called', 'undefined') |
                selectattr('entity_id', 'in', area_entities(room)) |
                map(attribute='entity_id') |
              list | first %}

            {% set audio_speaker = states.media_player | 
                rejectattr('attributes.device_class', 'undefined') |
                selectattr('attributes.device_class', 'search', '(speaker)') | 
                selectattr('entity_id', 'in', area_entities(room)) |
                map(attribute='entity_id') |
              list | first %}
            
            {% set tts = 'amp' %}
          {% elif type in ['normal','weather-alert','weather-advisory'] %}
            {% set ns = namespace(area_speakers = []) %}
            {% for room in rooms %}
              {% set ns.area_speakers = ns.area_speakers + states.media_player | 
              rejectattr('attributes.last_called', 'undefined') |
              selectattr('entity_id', 'in', area_entities(room))|
              map(attribute='entity_id') | list %}
            {% endfor %} 
            {% set jarvis_speaker = ns.area_speakers | join(',') %}
            {% set room = rooms | join(',') %}
            {% set audio_speaker = '' %}
            {% set tts = 'amp' %}
          {% else %} 
            {% set room = 'none' %}
            {% set jarvis_speaker = 'none' %}
            {% set audio_speaker = 'none' %}
            {% set tts = 'none' %}
          {% endif %}
          {"area":"{{room}}",
          "jarvis_speaker":"{{jarvis_speaker}}",
          "jarvis_tts":"{{tts}}",
          "audio_speaker":"{{audio_speaker}}",
          "type":"{{type}}"}
    - stop: "ok, Im done."
      response_variable: "room_services"

  get_room_mediaplayer:
    fields:
      room:
        selector:
          text:
        name: room
        description: Name or ID of the Room or Area
        required: true
      label:
        selector:
          text:
        name: label
        description: Label of the entities you want to target
        required: true
    sequence:
    - variables:
        room_entities: >-
          {% set entities = states.media_player | expand(label_entities(label)) |
                selectattr('entity_id', 'in', area_entities(room)) |
                map(attribute='entity_id') |
                list | first %}

          {"area":"{{room}}","label":"{{label}}","entities":"{{entities}}"}
    - stop: "ok, Im done."
      response_variable: "room_entities"

  get_room_audio:
    sequence:
    - service: script.get_room_presence
      response_variable: "presence"
    - variables:
        type: >
          {% if type in ['alert','priority','briefing','goodnight','weather_alert','weather_advisory','notification','gong','tornado','alarm','intercom'] %}
            {{type}}
          {% elif room in ['jeff','kat','skylar'] %}
            priority
          {% else %}
            normal
          {% endif %}
        room_priority: >
          {% if room is defined %}
            {% if room in ['jeff','kat','skylar']%}
              {{ states('sensor.'~room~'_room') }}
            {% else %}
              {{ room }}          
            {% endif %}
          {% else %}
            NA         
          {% endif %}
        rooms: >
          {{ presence.occupied_rooms |
            replace('master_bedroom','Master Bedroom') |
            replace('living_room','Living Room') |
            replace('pot_studio','Pottery Studio') |
            replace('skylars_bedroom','Skylars Bedroom') |
            replace('kitchen','Living Room')  }}
        room_services: >
          {% if type in ['alarm','weather-alert','weather-advisory','tornado'] %}
            {% set jarvis_speaker = 'media_player.all_rooms' %}
            {% set audio_speaker = 'media_player.all_rooms' %}
            {% set tts = 'ncc' %}
            {% set room = 'all' %}

          {% elif room_priority != 'NA'  %}
            {% set room = room_priority |
            replace('master_bedroom','Master Bedroom') |
            replace('living_room','Living Room') |
            replace('pot_studio','Pottery Studio') |
            replace('skylars_bedroom','Skylars Bedroom') |
            replace('kitchen','Living Room') %}

            {% set jarvis_speaker = expand(label_entities('Amazon Speakers')) |
                selectattr('entity_id', 'in', area_entities(room)) |
                map(attribute='entity_id') |
              list | first %}

            {% set audio_speaker = expand(label_entities('Google Speakers')) |
                selectattr('entity_id', 'in', area_entities(room)) |
                map(attribute='entity_id') |
              list | first %}

            {% set tts = 'ncc' %}
          {% elif room_priority == 'NA' %}
            {% set ns = namespace(area_speakers = []) %}
            {% set nsa = namespace(audio_speakers = []) %}
            {% for room in rooms %}
              {% set ns.area_speakers = ns.area_speakers + expand(label_entities('Amazon Speakers')) |
                selectattr('entity_id', 'in', area_entities(room)) |
                map(attribute='entity_id') | list %}
              {% set nsa.audio_speakers = nsa.audio_speakers + expand(label_entities('Google Speakers')) |
                selectattr('entity_id', 'in', area_entities(room)) |
                map(attribute='entity_id') | list %}
            {% endfor %}
            {% set jarvis_speaker = ns.area_speakers | join(',') %}
            {% set room = rooms | join(',') %}
            {% set audio_speaker = nsa.audio_speakers | join(',') %}
            {% set tts = 'ncc' %}
          {% else %} 
            {% set room = 'none' %}
            {% set jarvis_speaker = 'none' %}
            {% set audio_speaker = 'none' %}
            {% set tts = 'none' %}
          {% endif %}

          {"area":"{{room}}",
          "jarvis_speaker":"{{jarvis_speaker}}",
          "jarvis_tts":"{{tts}}",
          "audio_speaker":"{{audio_speaker}}",
          "type":"{{type}}",
          "room_priority":"{{room_priority}}"}
    - stop: "ok, Im done."
      response_variable: "room_services"

  # get_room_audio:
  #   sequence:
  #   - service: script.get_room_presence
  #     response_variable: "presence"
  #   - variables:
  #       type: >
  #         {% if type in ['alert','priority','briefing','goodnight','weather_alert','weather_advisory','notification','gong','tornado','alarm'] %}
  #           {{type}}
  #         {% elif room in ['jeff','kat','skylar'] %}
  #           priority
  #         {% else %}
  #           normal
  #         {% endif %}
  #       room_priority: >
  #         {% if room is defined %}
  #           {% if room in ['jeff','kat','skylar']%}
  #             {{ states('sensor.'~room~'_room') }}
  #           {% else %}
  #             {{ room }}          
  #           {% endif %}
  #         {% else %}
  #           NA         
  #         {% endif %}
  #       rooms: >
  #         {{ presence.occupied_rooms |
  #           replace('master_bedroom','Master Bedroom') |
  #           replace('living_room','Living Room') |
  #           replace('pot_studio','Pottery Studio') |
  #           replace('skylars_bedroom','Skylars Bedroom') |
  #           replace('kitchen','Living Room')  }}
  #       room_services: >
  #         {% if type in ['alert','tornado','alarm'] %}
  #           {% set jarvis_speaker = states.media_player | 
  #             rejectattr('attributes.last_called', 'undefined') |
  #             rejectattr('entity_id', 'search', '(skyman|this_device|everywhere)') |
  #             map(attribute='entity_id') |
  #             list | join(',') %}
  #           {% set audio_speaker = 'none' %}
  #           {% set tts = 'amp' %}
  #           {% set room = 'all' %}
          
  #         {% elif type in ['priority','goodnight','gong'] %} 
  #           {% set room = room_priority |
  #           replace('master_bedroom','Master Bedroom') |
  #           replace('living_room','Living Room') |
  #           replace('pot_studio','Pottery Studio') |
  #           replace('skylars_bedroom','Skylars Bedroom') |
  #           replace('kitchen','Living Room') %}

  #           {% set jarvis_speaker = states.media_player | 
  #               rejectattr('attributes.last_called', 'undefined') |
  #               selectattr('entity_id', 'in', area_entities(room)) |
  #               map(attribute='entity_id') |
  #             list | first %}

  #           {% set audio_speaker = states.media_player | 
  #               rejectattr('attributes.device_class', 'undefined') |
  #               selectattr('attributes.device_class', 'search', '(speaker)') | 
  #               selectattr('entity_id', 'in', area_entities(room)) |
  #               map(attribute='entity_id') |
  #             list | first %}
            
  #           {% set tts = 'amp' %}
  #         {% elif type in ['normal','briefing','weather-alert','weather-advisory','notification'] %}
  #           {% set ns = namespace(area_speakers = []) %}
  #           {% set nsa = namespace(audio_speakers = []) %}
  #           {% for room in rooms %}
  #             {% set ns.area_speakers = ns.area_speakers + states.media_player | 
  #             rejectattr('attributes.last_called', 'undefined') |
  #             selectattr('entity_id', 'in', area_entities(room))|
  #             map(attribute='entity_id') | list %}
  #           {% endfor %}
  #           {% for room in rooms %}
  #             {% set nsa.audio_speakers = nsa.audio_speakers + states.media_player | 
  #               rejectattr('attributes.device_class', 'undefined') |
  #               selectattr('attributes.device_class', 'search', '(speaker)') | 
  #               selectattr('entity_id', 'in', area_entities(room)) |
  #               map(attribute='entity_id') | list %}
  #           {% endfor %}  
  #           {% set jarvis_speaker = ns.area_speakers | join(',') %}
  #           {% set room = rooms | join(',') %}
  #           {% set audio_speaker = nsa.audio_speakers | join(',') %}
  #           {% set tts = 'amp' %}
  #         {% else %} 
  #           {% set room = 'none' %}
  #           {% set jarvis_speaker = 'none' %}
  #           {% set audio_speaker = 'none' %}
  #           {% set tts = 'none' %}
  #         {% endif %}

  #         {"area":"{{room}}",
  #         "jarvis_speaker":"{{jarvis_speaker}}",
  #         "jarvis_tts":"{{tts}}",
  #         "audio_speaker":"{{audio_speaker}}",
  #         "type":"{{type}}"}
  #   - stop: "ok, Im done."
  #     response_variable: "room_services"